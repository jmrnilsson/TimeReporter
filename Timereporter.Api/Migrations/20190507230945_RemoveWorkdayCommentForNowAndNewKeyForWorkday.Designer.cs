// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Timereporter.Api.Models;

namespace Timereporter.Api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190507230945_RemoveWorkdayCommentForNowAndNewKeyForWorkday")]
    partial class RemoveWorkdayCommentForNowAndNewKeyForWorkday
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Timereporter.Api.Models.CursorDo", b =>
                {
                    b.Property<string>("CursorType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25);

                    b.Property<DateTime>("Added");

                    b.Property<DateTime>("Changed");

                    b.Property<long>("Position");

                    b.HasKey("CursorType");

                    b.ToTable("Cursors");
                });

            modelBuilder.Entity("Timereporter.Api.Models.EventDo", b =>
                {
                    b.Property<long>("Timestamp");

                    b.Property<string>("Kind");

                    b.Property<DateTime>("Added");

                    b.Property<DateTime>("Changed");

                    b.HasKey("Timestamp", "Kind");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Timereporter.Api.Models.WorkdayDo", b =>
                {
                    b.Property<string>("Date")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<DateTime>("Added");

                    b.Property<int>("ArrivalMilliseconds");

                    b.Property<int>("BreakMilliseconds");

                    b.Property<DateTime>("Changed");

                    b.Property<long>("ConcurrencyToken")
                        .IsConcurrencyToken();

                    b.Property<int>("DepartureMilliseconds");

                    b.HasKey("Date");

                    b.ToTable("Workdays");
                });
#pragma warning restore 612, 618
        }
    }
}
